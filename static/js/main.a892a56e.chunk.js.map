{"version":3,"sources":["components/Controls/Controls.module.css","components/TransactionHistory/TransactionsHistory.module.css","components/Dashboard/Dashboard.module.css","components/Controls/Controls.js","components/Balance/Balance.js","components/TransactionHistory/TransactionHistory.js","components/Dashboard/Dashboard.jsx","index.js","components/Balance/Balance.module.css"],"names":["module","exports","controls","history","dashboard","Controls","_ref","handleGetValue","handleDeposit","handleWithdrawal","inputValue","react_default","a","createElement","className","styles","type","name","onChange","placeholder","value","onClick","Balance","balance","sumDeposit","sumWithdrawal","balanceDeposit","toFixed","balanceWithdrawal","TransactionHistory","transactions","map","transaction","key","id","amount","date","transactionAlert","incorrectValue","noMoney","success","calculateBalance","sumDeposits","filter","reduce","sum","deposit","sumWithdrawals","withdrawal","Dashboard","state","e","_this","setState","target","coinsValue","Number","Math","ceil","shortid","generate","Date","toLocaleString","concat","Object","toConsumableArray","resetInput","toast","error","_this$state","localStorage","getItem","JSON","parse","this","objectSpread","prevProps","prevState","setItem","stringify","_this$state2","components_Controls_Controls","components_Balance_Balance","components_TransactionHistory_TransactionHistory","react_toastify","closeButton","Component","ReactDOM","render","Dashboard_Dashboard","document","getElementById"],"mappings":"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","file":"static/js/main.a892a56e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"Controls_controls__3ltpw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"history\":\"TransactionsHistory_history__2ZXtD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboard\":\"Dashboard_dashboard__2Ksib\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Controls.module.css';\n\nconst Controls = ({\n  handleGetValue,\n  handleDeposit,\n  handleWithdrawal,\n  inputValue,\n}) => (\n  <section className={styles.controls}>\n    <input\n      type=\"number\"\n      name=\"value\"\n      onChange={handleGetValue}\n      placeholder=\"0\"\n      value={inputValue}\n    />\n    <button type=\"button\" onClick={handleDeposit}>\n      Deposit\n    </button>\n    <button type=\"button\" onClick={handleWithdrawal}>\n      Withdraw\n    </button>\n  </section>\n);\nControls.propTypes = {\n  handleGetValue: PropTypes.func.isRequired,\n  handleDeposit: PropTypes.func.isRequired,\n  handleWithdrawal: PropTypes.func.isRequired,\n  inputValue: PropTypes.string.isRequired,\n};\nexport default Controls;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Balance.module.css';\n\nconst Balance = ({ balance, sumDeposit, sumWithdrawal }) => (\n  <section className={styles.balance}>\n    <span className={styles.balanceDeposit}>\n      {(sumDeposit / 100).toFixed(2)}$\n    </span>\n    <span className={styles.balanceWithdrawal}>\n      {(sumWithdrawal / 100).toFixed(2)}$\n    </span>\n    <span>Balance: {(balance / 100).toFixed(2)}$</span>\n  </section>\n);\nBalance.propTypes = {\n  balance: PropTypes.number.isRequired,\n  sumDeposit: PropTypes.number.isRequired,\n  sumWithdrawal: PropTypes.number.isRequired,\n};\nexport default Balance;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './TransactionsHistory.module.css';\n\nconst TransactionHistory = ({ transactions }) => (\n  <table className={styles.history}>\n    <thead>\n      <tr>\n        <th>Transaction</th>\n        <th>Amount</th>\n        <th>Date</th>\n      </tr>\n    </thead>\n    <tbody>\n      {transactions.map(transaction => (\n        <tr key={transaction.id}>\n          <td>{transaction.type}</td>\n          <td>{(transaction.amount / 100).toFixed(2)}$</td>\n          <td>{transaction.date}</td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\nTransactionHistory.propTypes = {\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.number.isRequired,\n      date: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\nexport default TransactionHistory;\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport { ToastContainer, toast } from 'react-toastify';\nimport Controls from '../Controls/Controls';\nimport Balance from '../Balance/Balance';\nimport TransactionHistory from '../TransactionHistory/TransactionHistory';\nimport styles from './Dashboard.module.css';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst transactionAlert = {\n  incorrectValue: 'Введите сумму для проведения операции!',\n  noMoney: 'На счету недостаточно средств для проведения операции!',\n  success: 'Операция произведена успешно!',\n};\n\nconst calculateBalance = transactions => {\n  const deposits = transactions.filter(\n    transaction => transaction.type === 'deposit',\n  );\n  const sumDeposits = deposits.reduce(\n    (sum, deposit) => sum + deposit.amount,\n    0,\n  );\n  const withdrawals = transactions.filter(\n    transaction => transaction.type === 'withdrawal',\n  );\n  const sumWithdrawals = withdrawals.reduce(\n    (sum, withdrawal) => sum + withdrawal.amount,\n    0,\n  );\n\n  return {\n    balance: sumDeposits - sumWithdrawals,\n    deposit: sumDeposits,\n    withdrawal: sumWithdrawals,\n  };\n};\n\nexport default class Dashboard extends Component {\n  state = {\n    inputValue: '',\n    transactions: [],\n    balance: 0,\n    deposit: 0,\n    withdrawal: 0,\n  };\n\n  componentDidMount() {\n    if (localStorage.getItem('transactions')) {\n      const transactions = JSON.parse(localStorage.getItem('transactions'));\n      this.setState({ transactions, ...calculateBalance(transactions) });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { transactions } = this.state;\n    if (prevState.transactions !== transactions) {\n      this.setState({ ...calculateBalance(transactions) });\n      localStorage.setItem('transactions', JSON.stringify(transactions));\n    }\n  }\n\n  handleGetValue = e => {\n    this.setState({ inputValue: e.target.value });\n  };\n\n  handleDeposit = () => {\n    const { inputValue } = this.state;\n    const coinsValue = Number(inputValue) * 100;\n    if (coinsValue > 0 && Math.ceil(coinsValue) === coinsValue) {\n      const transaction = {\n        id: shortid.generate(),\n        type: 'deposit',\n        amount: coinsValue,\n        date: new Date().toLocaleString(),\n      };\n      this.setState(state => ({\n        transactions: [...state.transactions, transaction],\n      }));\n      this.resetInput();\n      toast.success(transactionAlert.success);\n    } else {\n      toast.error(transactionAlert.incorrectValue);\n    }\n  };\n\n  handleWithdrawal = () => {\n    const { inputValue, balance } = this.state;\n    const coinsValue = Number(inputValue) * 100;\n    if (coinsValue <= 0 || Math.ceil(coinsValue) !== coinsValue) {\n      toast.error(transactionAlert.incorrectValue);\n    } else if (balance >= coinsValue) {\n      const transaction = {\n        id: shortid.generate(),\n        type: 'withdrawal',\n        amount: coinsValue,\n        date: new Date().toLocaleString(),\n      };\n      this.setState(state => ({\n        transactions: [...state.transactions, transaction],\n      }));\n      this.resetInput();\n      toast.success(transactionAlert.success);\n    } else {\n      toast.error(transactionAlert.noMoney);\n    }\n  };\n\n  resetInput = () => {\n    this.setState({\n      inputValue: '',\n    });\n  };\n\n  render() {\n    const {\n      balance,\n      withdrawal,\n      deposit,\n      transactions,\n      inputValue,\n    } = this.state;\n    return (\n      <div className={styles.dashboard}>\n        <Controls\n          inputValue={inputValue}\n          handleGetValue={this.handleGetValue}\n          handleDeposit={this.handleDeposit}\n          handleWithdrawal={this.handleWithdrawal}\n        />\n        <Balance\n          balance={balance}\n          sumDeposit={deposit}\n          sumWithdrawal={withdrawal}\n        />\n        <TransactionHistory transactions={transactions} />\n        <ToastContainer closeButton={false} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Dashboard from './components/Dashboard/Dashboard';\n\nReactDOM.render(<Dashboard />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"balance\":\"Balance_balance__25StT\",\"balanceDeposit\":\"Balance_balanceDeposit__3QjjJ\",\"balanceWithdrawal\":\"Balance_balanceWithdrawal__BZrEd\"};"],"sourceRoot":""}